{
  "name": "stealthy-require",
  "version": "1.0.0",
  "description": "The closest you can get to require something with bypassing the require cache",
  "keywords": [
    "require",
    "bypass",
    "no",
    "cache",
    "fresh"
  ],
  "main": "./lib/index.js",
  "scripts": {
    "test": "./node_modules/.bin/gulp ci",
    "test-publish": "./node_modules/.bin/gulp ci-no-cov",
    "publish-please": "publish-please",
    "prepublish": "publish-please guard"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/analog-nico/stealthy-require.git"
  },
  "author": {
    "name": "Nicolai Kamenzky",
    "url": "https://github.com/analog-nico"
  },
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/analog-nico/stealthy-require/issues"
  },
  "homepage": "https://github.com/analog-nico/stealthy-require#readme",
  "engines": {
    "node": ">=0.10.0"
  },
  "dependencies": {},
  "devDependencies": {
    "bcrypt": "~0.8.7",
    "browserify": "~13.0.1",
    "chai": "~3.5.0",
    "chalk": "~1.1.3",
    "gulp": "~3.9.1",
    "gulp-coveralls": "~0.1.4",
    "gulp-eslint": "~2.1.0",
    "gulp-istanbul": "~1.0.0",
    "gulp-mocha": "~2.2.0",
    "mkdirp": "~0.5.1",
    "publish-please": "~2.1.4",
    "rimraf": "~2.5.3",
    "run-sequence": "~1.2.2",
    "webpack": "~1.13.1"
  },
  "readme": "# Stealthy-Require\n\n[![Build Status](https://img.shields.io/travis/analog-nico/stealthy-require/master.svg?style=flat-square)](https://travis-ci.org/analog-nico/stealthy-require)\n[![Coverage Status](https://img.shields.io/coveralls/analog-nico/stealthy-require.svg?style=flat-square)](https://coveralls.io/r/analog-nico/stealthy-require)\n[![Dependency Status](https://img.shields.io/david/analog-nico/stealthy-require.svg?style=flat-square)](https://david-dm.org/analog-nico/stealthy-require)\n\nThis is probably the closest you can currently get to require something in node.js with completely bypassing the require cache.\n\nThe restrictions are:\n\n- [Native modules cannot be required twice.](https://github.com/nodejs/node/issues/5016) Thus this module bypasses the require cache only for non-native (e.g. JS) modules.\n- The require cache is only bypassed for all operations that happen synchronously when a module is required. If a module lazy loads another module at a later time that require call will not bypass the cache anymore.\n\nThis means you should have a close look at all internal require calls before you decide to use this library.\n\n## Installation\n\n[![NPM Stats](https://nodei.co/npm/stealthy-require.png?downloads=true)](https://npmjs.org/package/stealthy-require)\n\nThis is a module for node.js and is installed via npm:\n\n``` bash\nnpm install stealthy-require --save\n```\n\n## Usage\n\nLet's say you want to bypass the require cache for this require call:\n\n``` js\nvar request = require('request');\n```\n\nWith `stealthy-require` you can do that like this:\n\n``` js\nvar stealthyRequire = require('stealthy-require');\n\nvar requestFresh = stealthyRequire(require.cache, function () {\n    return require('request');\n});\n```\n\nThe require cache is bypassed for the module you require (i.e. `request`) as well as all modules the module requires (i.e. `http` and many more).\n\n## Usage with Module Bundlers\n\n- [Webpack](https://webpack.github.io) works out-of-the-box like described in the [Usage section](#usage) above.\n- [Browserify](http://browserify.org) does not expose `require.cache`. However, as of `browserify@13.0.1` the cache is passed as the 6th argument to CommonJS modules. Thus you can pass this argument instead:\n\n``` js\n// Tweak for Browserify - using arguments[5] instead of require.cache\nvar requestFresh = stealthyRequire(arguments[5], function () {\n    return require('request');\n});\n```\n\n## Contributing\n\nTo set up your development environment for `stealthy-require`:\n\n1. Clone this repo to your desktop,\n2. in the shell `cd` to the main folder,\n3. hit `npm install`,\n4. hit `npm install gulp -g` if you haven't installed gulp globally yet, and\n5. run `gulp dev`. (Or run `node ./node_modules/.bin/gulp dev` if you don't want to install gulp globally.)\n\n`gulp dev` watches all source files and if you save some changes it will lint the code and execute all tests. The test coverage report can be viewed from `./coverage/lcov-report/index.html`.\n\nIf you want to debug a test you should use `gulp test-without-coverage` to run all tests without obscuring the code by the test coverage instrumentation.\n\n## Change History\n\n- v1.0.0 (2016-07-18)\n    - **Breaking Change:** API completely changed. Please read the [Usage section](#usage) again.\n    - Redesigned library to support module bundlers like [Webpack](https://webpack.github.io) and [Browserify](http://browserify.org)\n- v0.1.0 (2016-05-26)\n    - Initial version\n\n## License (ISC)\n\nIn case you never heard about the [ISC license](http://en.wikipedia.org/wiki/ISC_license) it is functionally equivalent to the MIT license.\n\nSee the [LICENSE file](LICENSE) for details.\n",
  "readmeFilename": "README.md",
  "_id": "stealthy-require@1.0.0",
  "dist": {
    "shasum": "a31c011dfec901e13e7cdde6d7c016e2841940f8"
  },
  "_from": "stealthy-require@^1.0.0",
  "_resolved": "https://registry.npmjs.org/stealthy-require/-/stealthy-require-1.0.0.tgz"
}
